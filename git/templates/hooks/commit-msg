#!/bin/sh
#
# strips unwanted whitespace and validates commit summary and description
MSG="$1"

subject_re="/^([a-zA-Z0-9./-]+): .*[^.]$/"
subject_alt="/^([a-zA-Z0-9./-]+|[A-Z_]+): .*[^.]$/"

check_msg() {
	awk -v subject_re="$subject_re" '
		BEGIN {
			max_header_length = 50
			max_line_length = 72
			ok = 1
			color_red = "\033[31m"
			color_bg_red = "\033[41m"
			color_reset = "\033[m"
		}

		function basename(file) {
			sub(".*/", "", file)
			return file
		}

		function error(fmt,ln,err) {
			ok = 0
			printf "%s:"fmt"", basename(FILENAME), ln, err > "/dev/stderr"
		}

		NR == 1 && /^\s+/ {
			error("%d:\033[0;31m leading whitespace in subject line:\033[0m\n%s\n", NR, $0)
		}

		/.*\s+$/ {
			error("%d:\033[0;31m trailing whitespace\n\033[0m%s\n", NR, $0)
		}

		NR == 1 && (length($0) > max_header_length) {
			error("%d:\033[0;31m summary line length \033[0m \n", NR)
			printf "(prefer <=%d chars)\n", max_header_length > "/dev/stderr"
		}

		NR == 1 && !/^([_a-zA-Z0-9\/\.-+]+): [^.]+.*[^.]$/ {
			error("%d:\033[0;31m invalid summary.\033[0m\n%s\n", NR, $0)
			printf "(expected match: %s)\n", subject_re > "/dev/stderr"
		}

		# comment line
		/^#/ {
			if (ok == 1) { exit 0 } else { exit 1 }
		}

		/[^ ]+[ ]{2,}[^ ]+/ {
			error("%d:\033[0;31m non-uniform word spacing:\033[0m\n%s\n", NR, $0)
		}

		#length($0) > 72	{ print "Line", NR, "too long:", substr($0,1,60) }
		NR > 2 && length($0) > max_line_length && !/^\s*[a-zA-Z0-9_\-\/\.]+\s+\|\s+\d+/ {
			error("%d:\033[0;31m unwrapped line.\033[0m\n%s\n", NR, substr($0,1,60))
			printf "(prefer %d chars)\n", max_line_length > "/dev/stderr"
		}

		END { if (ok != 1) { exit 1 } }' "$MSG"
}

check_msg
exit 0
